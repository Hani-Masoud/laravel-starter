
networks:
  laravel-starter:


services:
  # Nginx Service
  app:
    build:
      context: ./docker
      dockerfile: nginx/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel-starter

  # MySQL Service
  mysql:
#    image: mariadb:10.6
    image: mariadb:11.8
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel-starter
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # PHP Service
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
      - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - laravel-starter
    healthcheck:
      test: [ "CMD", "php-fpm", "-t" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel-starter
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  composer:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel-starter

  npm:
    image: node:current-alpine
    volumes:
      - ./src:/var/www/html:delegated
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: [ 'npm' ]
    networks:
      - laravel-starter


  artisan:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel-starter

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel-starter

  # PHPMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    tty: true
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - laravel-starter
    depends_on:
      - mysql

volumes:
  mysql_data:
    driver: local